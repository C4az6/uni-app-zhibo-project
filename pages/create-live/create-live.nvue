<template>
	<view>
		<live-pusher id='livePusher' ref="livePusher" class="livePusher" :url="livePusherOptions.url"
			:mode="livePusherOptions.mode" :muted="true" :enable-camera="livePusherOptions.enableCamera"
			:auto-focus="true" :beauty="livePusherOptions.beauty" :whiteness="livePusherOptions.whiteness"
			:aspect="livePusherOptions.aspect" @statechange="statechange" @netstatus="netstatus" @error="error"
			:style="`height:${windowHeight}px;`" style="width: 750rpx;"></live-pusher>

		<!-- 覆盖在页面的组件 -->
		<view class="position-fixed right-0 left-0" :style="`top: ${statusBarHeight}px;height: 500rpx;`">
			<!-- 关闭按钮 -->
			<view class="flex justify-center align-center" style="width: 90rpx;height: 90rpx;">
				<text class="iconfont text-white">&#xe607;</text>
			</view>


			<!-- 直播间设置 -->
			<view class="position-absolute rounded p-2  flex align-center"
				style="left: 90rpx;right: 100rpx;height: 160rpx;background-color: rgba(0,0,0,.2);">
				<view class="position-relative bg-white rounded" style="width: 120rpx;height: 120rpx;">
					<image class="rounded-circle" style="width: 120rpx;height: 120rpx;" src="/static/gift/4.png"
						mode=""></image>

					<text class="text-white position-absolute bottom-0 left-0 right-0 font">更换封面</text>
				</view>

				<view class="flex-1 ml-2">
					<input class="mb-2 text-white" type="text" placeholder="请输入直播标题">
					<text class="text-white font">#选择分类</text>
				</view>
			</view>

			<!-- 直播特效功能列表 -->
			<view class="position-absolute right-0 flex flex-column" style="width: 100rpx;background-color: rgba(0,0,0,.4);">
				<view style="height: 120rpx;" class="flex flex-column align-center justify-center"
					@click="switchCamera">
					<text class="iconfont text-white mb-1">&#xe605;</text>
					<text class="text-white font">翻转</text>
				</view>

				<view style="height: 120rpx;" class="flex flex-column align-center justify-center" @click="openPopup('mode')">
					<text class="iconfont text-white mb-1">&#xe60c;</text>
					<text class="text-white font">画质</text>
				</view>

				<view style="height: 120rpx;" class="flex flex-column align-center justify-center" @click="openPopup('beauty')">
					<text class="iconfont text-white mb-1">&#xe632;</text>
					<text class="text-white font">美颜</text>
				</view>

				<view style="height: 120rpx;" class="flex flex-column align-center justify-center" @click="openPopup('whiteness')">
					<text class="iconfont text-white mb-1">&#xe631;</text>
					<text class="text-white font">美白</text>
				</view>
			</view>
		</view>

		<!-- 开启直播按钮 -->
		<view class="position-fixed bg-main flex justify-center align-center rounded-circle"
			style="left: 100rpx;right: 100rpx;bottom: 100rpx;height: 120rpx;" @click="handleStartLive">
			<text class="text-white font-md">开始视频直播</text>
		</view>


		<!-- 切换画质的弹出层 -->
		<uni-popup ref="popup" type="bottom">
			<view class="bg-white">
				<view class="flex align-center justify-center border-bottom" style="height: 90rpx;">
					<text class="font-md">{{getPopupTitle}}</text>
				</view>
				<!-- 画质选择 -->
				<view v-if="popupType==='mode'">
					<view class="flex align-center justify-center py-2 hover-class" hover-class="bg-light"
						v-for="(item, index) in modeList" :key="item.desc" :class="livePusherOptions.mode === item.type ? 'bg-main' : ''" @click="switchVideoMass(item)">
						<text class="font-md" :class="livePusherOptions.mode === item.type ? 'text-white' : ''">{{item.desc}}</text>
					</view>
				</view>
				
				<!-- 美颜 -->
				<view v-else-if="popupType==='beauty'">
					<slider :min="0" :max="9" :step="1" :value="livePusherOptions.beauty" :block-size="18" showValue @change="handleSliderChange"/>
				</view>
				
				<!-- 美白 -->
				<view v-else-if="popupType==='whiteness'">
					<slider :min="0" :max="9" :step="1" :value="livePusherOptions.whiteness" :block-size="18" showValue @change="handleSliderChange"/>
				</view>
				<view class="f-divider"></view>
				<view class="flex align-center justify-center hover-class " style="height: 90rpx;" hover-class="" @click="closePopup">
					<text class="font-md">取消</text>
				</view>
			</view>
		</uni-popup>
	</view>
</template>

<script>
	export default {
		data() {
			return {
				livePusherOptions: {
					url: '',
					mode: 'SD',
					enableCamera: true,
					position: "back",
					beauty: 0,
					whiteness: 2,
					aspect: "9:16"
				},
				windowHeight: 0,
				// 直播组件上下文
				context: null,
				statusBarHeight: 0,
				modeList: [{
						type: 'SD',
						desc: '标清'
					},
					{
						type: 'HD',
						desc: '高清'
					},
					{
						type: 'FHD',
						desc: '超清'
					}
				],
				popupType: 'mode'
			}
		},
		methods: {
			// 开启视频直播
			handleStartLive() {
				let params = {
					mode: this.livePusherOptions.mode,
					beauty: this.livePusherOptions.beauty,
					whiteness: this.livePusherOptions.whiteness,
					position: this.livePusherOptions.position
				}
				uni.navigateTo({
					url: '/pages/liveroom/liveroom?options=' + JSON.stringify(params)
				})
			},
			// 监听滑块变化
			handleSliderChange(e) {
				this.livePusherOptions[this.popupType] = e.detail.value
			},
			// 切换画质
			switchVideoMass(item) {
				this.livePusherOptions.mode = item.type
				uni.showToast({
					title:'画质切换为: ' + item.desc,
					icon: 'none'
				})
				this.$refs.popup.close()
			},
			// 关闭弹出层
			closePopup() {
				this.$refs.popup.close();
			},
			// 打开切换画质弹出层
			openPopup(type) {
				console.log(666)
				this.popupType = type
				this.$refs.popup.open();
			},
			// 切换镜头
			switchCamera() {
				this.context.switchCamera({
					success: e => {}
				})
			},
			// 开启摄像头预览
			startPreview() {
				this.context.startPreview({
					success: (e) => {
						this.livePusherOptions.position === 'back' ? 'front' : 'back';
					}
				})
			},
			// 直播状态变化
			statechange(e) {

			},
			// 直播网络变化
			netstatus() {},
			// 监听错误
			error() {}
		},
		computed: {
			// 弹出层标题
			getPopupTitle() {
				/* let title;
				if (this.popupType === 'mode') {
					title = '画质'
				}else if (this.popupType === 'beauty') {
					title = '美颜'
				}else if (this.popupType === 'whiteness') {
					title = '美白'
				}
				return title; */
				
				let options = {
					mode: '画质',
					beauty: '美颜',
					whiteness: '美白'
				}
				return options[this.popupType]
			}
		},
		onLoad() {
			// 获取设备信息
			let res = uni.getSystemInfoSync();
			this.windowHeight = res.windowHeight;
			this.statusBarHeight = res.statusBarHeight;
		},
		onReady() {
			this.context = uni.createLivePusherContext('livePusher', this);
			this.startPreview() 
		}
	}
</script>

<style lang="less">
	.hover-class:active {
		background-color: #f8f9fa;
	}
</style>
